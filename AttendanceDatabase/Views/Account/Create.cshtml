@model AttendanceDatabase.Models.Account

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Account</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="Account" asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Username" class="control-label"></label>
                <input asp-for="Username" class="form-control" />
                <span asp-validation-for="Username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" type="password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="role" class="control-label"></label>
                <select asp-for="role" class="form-control"> <option value="Admin">Admin</option> <option value="Staff">Staff</option> </select>
                <span asp-validation-for="role" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary">@(Model.Id == 0 ? "Create" : "Update")</button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="ManageAccounts">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
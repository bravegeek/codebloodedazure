@{
    ViewData["Title"] = "Select Categories";
}

@model CategoryPaginationViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
</head>
<body class="RP_ReportBody">
    <div class="RP_categoryContainer">
        <div class="RP_categoryList">
            <form asp-controller="Form">
                <h2 class="text-center">Categories</h2>

                @if (Model.Categories.Count() == 0)

                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Select All</th>
                                <th>Category Name</th>
                                <th>Category Date</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <p class="text-center">No categories to show</p>
                }

                else

                {
                    <div>
                        <br />
                        <table class="table">
                            <thead>
                                <tr>
                                    <th><input type="checkbox" onclick="toggle(this)" value="Select All" /> Select All</th>
                                    <th>Category Name</th>
                                    <th>Category Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    foreach (var category in Model.Categories)

                                    {
                                        <tr>
                                            <td><input type="checkbox" onclick="submitForm(this)" name="category" value="@category.Category.Id" />
                                            <td>@category.Category.Name</td>
                                            <td>@category.Category.Date.ToString("MM/dd/yyyy")</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <input type="hidden" id="selectedCategoryIdsField" name="selectedCategoryIds">
                    <button type="submit" class="RP_visualRPBtn" asp-action="VisualReportPage">Generate Report</button>
                    <button type="submit" class="RP_dataBtn" asp-action="DownloadRawData">Download Data</button>
                }

                <div class="pagination">
                    @if (Model.CurrentPage > 1)

                    {
                        <a href="@Url.Action("RP_ViewPastCategories", new { page = Model.CurrentPage - 1 })" class="btn btn-primary">Previous</a>
                    }

                    @for (var i = 1; i <= Model.TotalPages; i++)

                    {
                        <a href="@Url.Action("RP_ViewPastCategories", new { page = i })" class="btn btn-secondary @(i == Model.CurrentPage ? "active" : "")">@i</a>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)

                    {
                        <a href="@Url.Action("RP_ViewPastCategories", new { page = Model.CurrentPage + 1 })" class="btn btn-primary">Next</a>
                    }
                </div>

            </form>
        </div>
        <div class="RP_filterGroup">
            <div id="RP_innerFilterGroup">
                <form asp-controller="Form" method="post">
                    <h3>Filter</h3>
                    <h6>Category Name</h6>
                    <input type="text" name="selectedName" />
                    <br />
                    <br />
                    <h6>Date</h6>
                    <label for="startDate">From:</label>
                    <input type="date" class="form-control" name="startDate" id="startDate">
                    <br />
                    <label for="endDate">To:</label>
                    <input type="date" class="form-control" name="endDate" id="endDate">
                    <br />
                    <h6>Tags</h6>
                    @{
                        var uniqueTags = new HashSet<string>();
                    }

                    <select name="selectedTags" multiple class="form-control">
                        @foreach (var categoryInfo in Model.Categories)

                        {
                            @if (categoryInfo.Tags != null && categoryInfo.Tags.Any())

                            {

                                foreach (var tag in categoryInfo.Tags)

                                {
                                    if (uniqueTags.Add(tag.Name))
                                    {
                                        <option value="@tag.Name">@tag.Name</option>
                                    }

                                }

                            }

                            else

                            {
                                <p>No tags available.</p>
                            }
                        }
                    </select>
                    <br />
                    <h6>Category Type</h6>
                    <input type="checkbox" name="events" value="true" />Event
                    <br />
                    <input type="checkbox" name="programs" value="true" />Program
                    <br />
                    <input type="checkbox" name="cafes" value="true" />Cafe Visit
                    <br />
                    <br />
                    <button type="submit" class="RP_filterBtn" asp-action="ViewPastCategories">Submit</button>
                    <button type="submit" class="RP_filterBtn" asp-action="ViewPastCategories">Remove Filters</button>
                </form>
            </div>
        </div>

    </div>
</body>
</html>


<script language="JavaScript">
    /*Function selects all checkboxes*/
    function toggle(source) {
        checkboxes = document.getElementsByName('category');
        var selectedCategoryIds = [];

        for (var i = 0, n = checkboxes.length; i < n; i++) {
            checkboxes[i].checked = source.checked;
            if (checkboxes[i].checked) {
                selectedCategoryIds.push(checkboxes[i].value);
            }
        }

        document.getElementById('selectedCategoryIdsField').value = selectedCategoryIds.join(',');
    }

    /*Function gathers all selected checkboxes and submits the form*/
    function submitForm() {
        // Get all the checked checkboxes
        var selectedCheckboxes = document.querySelectorAll('input[type="checkbox"]:checked');

        if (selectedCheckboxes.length === 0) {
            alert("No items selected.");
            return; // Exit if no checkboxes are selected
        }

        // Clear any existing hidden inputs (if the form is being resubmitted)
        var form = document.getElementById("myForm");
        var existingHiddenInputs = form.querySelectorAll('input[type="hidden"]');
        existingHiddenInputs.forEach(function (input) {
            input.remove();
        });

        // Loop through the selected checkboxes and create hidden input elements
        selectedCheckboxes.forEach(function (checkbox) {
            var hiddenInput = document.createElement("input");
            hiddenInput.type = "hidden";
            hiddenInput.name = "category";
            hiddenInput.value = checkbox.value;
            form.appendChild(hiddenInput);
        });

        form.submit();
    }

    /*Function submits form manually*/
    $(".RP_submitBtn").click(function (e) {
        e.preventDefault();

        $(this).closest("form").submit();
    });</script>

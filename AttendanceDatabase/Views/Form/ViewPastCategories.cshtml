@{
    ViewData["Title"] = "Select Categories";
}
@model CategoryPaginationViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
</head>
<body class="RP_ReportBody">
    <div class="RP_categoryContainer">
        <div class="RP_categoryList">
            <form asp-controller="Form" id="categoryForm">
                <h2 class="text-center">Categories</h2>

                @if (Model.Categories.Count() == 0)

                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Select All</th>
                                <th>Category Name</th>
                                <th>Category Date</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                    <p class="text-center">No categories to show</p>
                }

                else

                {
                    <div>
                        <br />
                        <table class="table">
                            <thead>
                                <tr>
                                    <th><input type="checkbox" id="selectAllGlobal" /> Select All</th>
                                    <th>Category Name</th>
                                    <th>Category Date</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var category in Model.Categories)

                                {
                                    <tr>
                                        <td>
                                            <input type="checkbox" class="category-checkbox" value="@category.Category.Id" />
                                        </td>
                                        <td>@category.Category.Name</td>
                                        <td>@category.Category.Date.ToString("MM/dd/yyyy")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <input type="hidden" id="selectedCategoryIdsField" name="selectedCategoryIds" />
                    <button type="submit" class="RP_visualRPBtn" asp-action="VisualReportPage">Generate Report</button>
                    <button type="submit" class="RP_dataBtn" asp-action="DownloadRawData">Download Data</button>
                }

                <div class="pagination">
                    @if (Model.CurrentPage > 1)

                    {
                        <a href="@Url.Action("ViewPastCategories", new { page = Model.CurrentPage - 1 })" class="RP_reportPageBtn">Previous</a>
                    }

                    @for (var i = 1; i <= Model.TotalPages; i++)

                    {
                        <a href="@Url.Action("ViewPastCategories", new { page = i })" class="RP_reportPageBtn @(i == Model.CurrentPage ? "active" : "")">@i</a>
                    }

                    @if (Model.CurrentPage < Model.TotalPages)

                    {
                        <a href="@Url.Action("ViewPastCategories", new { page = Model.CurrentPage + 1 })" class="RP_reportPageBtn">Next</a>
                    }
                </div>
            </form>
        </div>


        <div class="RP_filterGroup">
            <div id="RP_innerFilterGroup">
                <form asp-controller="Form" method="post">
                    <h3>Filter</h3>
                    <h6>Category Name</h6>
                    <input type="text" name="selectedName" />
                    <br /><br />
                    <h6>Date</h6>
                    <label for="startDate">From:</label>
                    <input type="date" class="form-control" name="startDate" id="startDate">
                    <br />
                    <label for="endDate">To:</label>
                    <input type="date" class="form-control" name="endDate" id="endDate">
                    <br />
                    <h6>Tags</h6>
                    @{
                        var uniqueTags = new HashSet<string>();
                    }
                    <select name="selectedTags" multiple class="form-control">
                        @foreach (var categoryInfo in Model.Categories)

                        {

                            if (categoryInfo.Tags != null && categoryInfo.Tags.Any())

                            {

                                foreach (var tag in categoryInfo.Tags)

                                {
                                    if (uniqueTags.Add(tag.Name))
                                    {
                                        <option value="@tag.Name">@tag.Name</option>
                                    }

                                }

                            }

                        }
                    </select>
                    <br />
                    <h6>Category Type</h6>
                    <input type="checkbox" name="events" value="true" /> Event<br />
                    <input type="checkbox" name="programs" value="true" /> Program<br />
                    <input type="checkbox" name="cafes" value="true" /> Cafe Visit<br /><br />
                    <button type="submit" class="RP_filterBtn" asp-action="ViewPastCategories">Submit</button>
                    <button type="submit" class="RP_filterBtn" asp-action="ViewPastCategories">Remove Filters</button>
                </form>
            </div>
        </div>
    </div>


    <script>        const LOCAL_STORAGE_KEY = 'selectedCategoryIds';

        function getStoredSelections() {
            return JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [];
        }

        function storeSelections(selections) {
            localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(selections));
        }

        function updateHiddenField() {
            document.getElementById('selectedCategoryIdsField').value = getStoredSelections().join(',');
        }

        function restoreCheckboxStates() {
            const storedSelections = getStoredSelections();
            document.querySelectorAll('.category-checkbox').forEach(cb => {
                cb.checked = storedSelections.includes(cb.value);
            });
        }

        function updateStoredSelection(checkbox) {
            let stored = getStoredSelections();
            if (checkbox.checked) {
                if (!stored.includes(checkbox.value)) {
                    stored.push(checkbox.value);
                }
            } else {
                stored = stored.filter(id => id !== checkbox.value);
            }
            storeSelections(stored);
            updateHiddenField();
        }

        function handleSelectAllChange(checkbox) {
            const check = checkbox.checked;
            let stored = getStoredSelections();
            const allCheckboxes = document.querySelectorAll('.category-checkbox');

            allCheckboxes.forEach(cb => {
                cb.checked = check;
                const id = cb.value;
                if (check && !stored.includes(id)) {
                    stored.push(id);
                } else if (!check) {
                    stored = stored.filter(storedId => storedId !== id);
                }
            });

            storeSelections(stored);
            updateHiddenField();
        }

        document.addEventListener('DOMContentLoaded', () => {
            restoreCheckboxStates();
            updateHiddenField();

            document.querySelectorAll('.category-checkbox').forEach(cb => {
                cb.addEventListener('change', () => updateStoredSelection(cb));
            });

            const selectAllBox = document.getElementById('selectAllGlobal');
            if (selectAllBox) {
                selectAllBox.addEventListener('change', () => handleSelectAllChange(selectAllBox));
            }

            document.getElementById('categoryForm').addEventListener('submit', () => {
                localStorage.removeItem(LOCAL_STORAGE_KEY);
            });
        });</script>
</body>
</html>
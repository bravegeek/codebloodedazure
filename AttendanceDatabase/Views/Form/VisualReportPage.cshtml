@model List<ChartDataViewModel>

<html>
<head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js" integrity="sha512-GsLlZN/3F2ErC5ifS5QtgpiJtWd43JWSuIgh7mbzZ8zBps+dvLusV+eNQATqgA/HdeKFVgA5v3S/cIrLF7QnIg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</head>
<body id="RP_VisualReportPage">

    <h1 class="text-center" id="RP_ReportTitle">Attendance Report</h1>
    <span id="RP_PDFSpan"><button id="saveReportBtn" type="button">Save Report</button></span>
    <br />
    <br />
    <h4 class="text-start" id="RP_CategoryCnt">Number of Category Events: @ViewBag.CategoryCnt</h4>
    <h4 class="text-start" id="RP_TagCnt">Number of Tags: @ViewBag.TagCnt</h4>
    <h4 class="text-start" id="RP_AttendanceCnt">Total Attendance: @ViewBag.TotCount</h4>

    <div class="RP_chartContainer">
        <!-- Bar Chart -->
        <div class="RP_barChart">
            <canvas id="RP_barChart" width="600" height="400"></canvas>
            <button id="barLegendBtn" type="button">Toggle Legend</button>
        </div>

        <!-- Pie Chart -->
        <div class="RP_pieChart">
            <canvas id="RP_pieChart" width="400" height="400"></canvas>
            <button id="pieLegendBtn" type="button">Toggle Legend</button>
        </div>
    </div>

    <script>
        var labels = @Html.Raw(Json.Serialize(ViewBag.BarChartNames));
        var dataValues = @Html.Raw(Json.Serialize(ViewBag.BarChartAttnCnts));
        var pielabels = @Html.Raw(Json.Serialize(ViewBag.PieChartTags));
        var piedataValues = @Html.Raw(Json.Serialize(ViewBag.PieChartAttnCnts));

        // Function to generate a random color
        function getRandomColor() {
            var letters = '0123456789ABCDEF';
            var color = '#';
            for (var i = 0; i < 6; i++) {
                color += letters[Math.floor(Math.random() * 16)];
            }
            return color;
        }

        // Generate a random color for each category
        var barbackgroundColors = labels.map(function () {
            return getRandomColor();
        });
        var piebackgroundColors = pielabels.map(function () {
            return getRandomColor();
        });

        // Bar Chart
        var ctxBar = document.getElementById('RP_barChart').getContext('2d');
        var myBarChart = new Chart(ctxBar, {
            type: 'bar',
            data: {
                labels: labels,
                datasets: [{
                    data: dataValues,
                    backgroundColor: barbackgroundColors,
                    borderColor: barbackgroundColors,
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    legend: {
                        position: 'bottom',
                        display: true, // Legend is initially visible
                        onClick: function (e, legendItem) {
                            var index = legendItem.datasetIndex;
                            var meta = myBarChart.getDatasetMeta(index);

                            // Toggle the visibility of the dataset when legend is clicked
                            meta.hidden = meta.hidden === null ? !myBarChart.data.datasets[index].hidden : null;
                            myBarChart.update();
                        },
                        labels: {
                            generateLabels: function (chart) {
                                var data = chart.data;
                                return data.labels.map(function (label, i) {
                                    return {
                                        text: label + ': ' + data.datasets[0].data[i],
                                        fillStyle: data.datasets[0].backgroundColor[i]
                                    };
                                });
                            }
                        }
                    }
                }
            }
        });

        // Pie Chart
        var ctxPie = document.getElementById('RP_pieChart').getContext('2d');
        var myPieChart = new Chart(ctxPie, {
            type: 'pie',
            data: {
                labels: pielabels,
                datasets: [{
                    data: piedataValues,
                    backgroundColor: piebackgroundColors
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'right',
                        display: true, // Legend is initially visible
                        onClick: function (e, legendItem) {
                            var index = legendItem.datasetIndex;
                            var meta = myPieChart.getDatasetMeta(index);

                            // Toggle the visibility of the dataset when legend is clicked
                            meta.hidden = meta.hidden === null ? !myPieChart.data.datasets[index].hidden : null;
                            myPieChart.update();
                        },
                        labels: {
                            generateLabels: function (chart) {
                                var data = chart.data;
                                return data.labels.map(function (label, i) {
                                    return {
                                        text: label + ': ' + data.datasets[0].data[i],
                                        fillStyle: data.datasets[0].backgroundColor[i]
                                    };
                                });
                            }
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                return tooltipItem.label + ': ' + tooltipItem.raw;
                            }
                        }
                    }
                }
            }
        });

        document.getElementById("barLegendBtn").addEventListener("click", function () {
            var currentLegendStateBar = myBarChart.options.plugins.legend.display;
            myBarChart.options.plugins.legend.display = !currentLegendStateBar;
            myBarChart.update();
        });

        document.getElementById("pieLegendBtn").addEventListener("click", function () {
            var currentLegendStatePie = myPieChart.options.plugins.legend.display;
            myPieChart.options.plugins.legend.display = !currentLegendStatePie;
            myPieChart.update();
        });

        // Save Report button functionality
        document.getElementById("saveReportBtn").addEventListener("click", function () {
            var element = document.getElementById("RP_VisualReportPage");
            var options = {
                filename: 'attendance_report.pdf',
                image: { type: 'jpeg', quality: 0.98 },
                html2canvas: { scale: 2, logging: true, letterRendering: true },
                jsPDF: {
                    unit: 'mm',
                    format: 'a3',
                    orientation: 'landscape',
                    margin: [10, 10, 10, 10],
                },
                pagebreak: { mode: ['avoid-all', 'css', 'legacy'] },
            };

            html2pdf(element, options);
        });
    </script>

</body>
</html>


